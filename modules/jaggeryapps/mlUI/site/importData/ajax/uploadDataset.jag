<%
    include("/jagg/jagg.jag");
    var log = new Log();
    var carbon = require('carbon');
    var uuid = require('uuid');

    // Create a project
    var projectManagementService = carbon.server.osgiService('org.wso2.carbon.ml.project.mgt.ProjectManagementService');
    var projectDescription = request.getParameter("projectDescription");
    var projectName = request.getParameter("projectName");
    var projectId = uuid.generate();
    projectManagementService.createProject(projectId, projectName, projectDescription);
    session.put("projectId", projectId);

    // Add the tenant to the project
    projectManagementService.addTenantToProject(session.get("tenantId"), projectId);

    var mlDatasetService = carbon.server.osgiService('org.wso2.carbon.ml.dataset.DatasetService');
    var sourceFile = request.getFile("uploadDataset");
    try {
        //insert dataset details
        var datasetId=uuid.generate();
        sourceFile.open("r");
        var inputStream = sourceFile.getStream();
        var numOfFeatures = mlDatasetService.uploadDataset(inputStream.getStream(), datasetId, sourceFile.getName(), projectId);
        session.put("datasetId", datasetId);
        session.put("datasetName", sourceFile.getName());
        session.put("numOfFeatures", numOfFeatures);
    } catch(e) {
        log.error("An error occured while uploading file " + sourceFile.getName() + " of user " + session.get("logged.user"), e);
    }finally{
        inputStream.getStream().close();
        sourceFile.close();
    }

    //create a new workflow
    var workflowId = uuid.generate();
    var workflowName = request.getParameter("workflowName");
    projectManagementService.createNewWorkflow(workflowId,workflowId,projectId,datasetId,workflowName);
    session.put("workflowId", workflowId);
    
    // load default feature settings 
    projectManagementService.setDefaultFeatureSettings(datasetId, workflowId);
%>